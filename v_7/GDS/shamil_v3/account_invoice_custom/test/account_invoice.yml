
-
  I create a Tax Codes
-
  !record {model: account.tax.code, id: tax_case}:
    name: Tax_case
    company_id: base.main_company
    sign: 1

-
  I create a Tax
-
  !record {model: account.tax, id: tax10}:
    name: Tax 10.0
    amount: 10.0
    type: fixed
    sequence: 1
    company_id: base.main_company
    type_tax_use: all
    tax_code_id: tax_case
  
- 
  Creating a account.analytic.account record
- 
  !record {model: account.analytic.account, id: account_analytic_account_agrolait0}:
    code: '3'
    contact_id: base.res_partner_address_8
    date_start: '2013-01-05'
    name: Agrolait
    parent_id: account.analytic_customers
    partner_id: base.res_partner_agrolait
    quantity_max: 0.0
    state: open
 
      
- 
  Creating a account.invoice record
- 
  !record {model: account.invoice, id: account_invoice_0}:
    account_id: account.a_pay
    address_contact_id: base.res_partner_address_3000
    check_total: 3000.0
    company_id: base.main_company
    currency_id: base.EUR
    invoice_line:
      - account_id: account.a_expense
        name: '[PC1] Basic PC'
        price_unit: 300.0
        product_id: product.product_product_pc1
        quantity: 10.0
        uos_id: product.product_uom_unit
        account_analytic_id: account_analytic_account_agrolait0
        invoice_line_tax_id:
                  - tax10
    journal_id: account.expenses_journal
    partner_id: base.res_partner_desertic_hispafuentes
    reference_type: none
    type: in_invoice

    
-
  I check that Initially customer invoice is in the "Draft" state
-
  !assert {model: account.invoice, id: account_invoice_0}:
    - state == 'draft', 'state is not draft'

-
  I change the state of invoice to "Completed" by clicking Complete button
-
  !workflow {model: account.invoice, action: invoice_complete, ref: account_invoice_0}

-
  I check that Initially customer invoice is in the "Completed" state
-
  !assert {model: account.invoice, id: account_invoice_0}:
    - state == 'completed', 'state is not completed'
    
-
  I change the state of invoice to "Closed" by clicking Close button
-
  !workflow {model: account.invoice, action: invoice_close, ref: account_invoice_0}

-
  I check that Initially customer invoice is in the "Closed" state
-
  !assert {model: account.invoice, id: account_invoice_0}:
    - state == 'closed', 'state is not close'

-
  I check that there is no move attached to the invoice
-
  !python {model: account.invoice}: |
    acc_id=self.browse(cr, uid, ref("account_invoice_0"))
    assert (not acc_id.move_id), "Move falsely created at closed"


-
  I change the state of invoice to "Open" by clicking Approve button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_0}

-
  I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: account_invoice_0}:
    - state == 'open'

