# -*- coding: utf-8 -*-
##############################################################################
#
# NCTR, Nile Center for Technology Research
# Copyright (C) 2011-2012 NCTR (<http://www.nctr.sd>).
#
##############################################################################

import time
import pooler
import copy
from report import report_sxw
import pdb
import re
from osv import fields, osv
from openerp.tools.translate import _

class asset_custody_detail_reports(report_sxw.rml_parse):
    def __init__(self, cr, uid, name, context):
        super(asset_custody_detail_reports, self).__init__(cr, uid, name, context)
        self.localcontext.update({
            'time': time,
            'get_data':self._get_data,
            'get_office':self._get_office,
            
        })
# GET OFFICES LIST (USE TO FILTTER CUSTODIES BY OFFICE)

    def _get_office(self,data):
        department_id= data['form']['department_id'][0]
 
        office_ids=[]
        office_obj = self.pool.get('office.office')
        asset_obj = self.pool.get('account.asset.asset')
        asset_ids = asset_obj.search(self.cr, self.uid, [('department_id','=',department_id)])
        for asset in asset_obj.browse(self.cr,self.uid, asset_ids):
            if asset.office_id and asset.office_id not in office_ids :

                office_ids.append(asset.office_id)
     
 
        print office_ids
        
        return  office_ids

# FUNCTION TO GET DATA PASSSED TO THE REPORT 

    def _get_data(self,data):

        """ Finds the  custodies quantity by department and executing agency
        """
 
        date_from=data['form']['date_from']
        date_to=data['form']['date_to']
 
        executing_agency= data['form']['executing_agency']
        self.cr.execute("""
                select

                    min(off.name) as office,
                    min(mod.name) as model,
 
                    min(typ.name) as main_type ,
                    min(cuss.executing_agency) as executing_agency,

                    min(dept.name) as dept,
                    min(emp.name_related) as emp,
 
 
                    min(cuss.name) as ref,
                    min(cuss.date) as date,
                    min(cus.custody_type) as type,
 
                     
                    from asset_custody_line cus 
 
                    left join asset_custody cuss on (cus.custody_id=cuss.id)
                    left join office_office off on (cus.office=off.id)
                    left join product_template mod on (cus.product_id=mod.id)
                    left join product_product modd on (cus.product_id=modd.id)
                    left join product_category typ on (mod.categ_id=typ.id)
                    left join hr_department dept on (cus.department_to=dept.id)
                    left join hr_employee emp on (cus.employee_to=emp.id)

                where  
                  (cus.executing_agency = %s and  to_char(cuss.date,'YYYY-mm-dd')>=%s and to_char(cuss.date,'YYYY-mm-dd')<=%s and cuss.state ='recived' and cuss.type ='return')
                group by 
                     cus.id
                order by
                     type,date,dept
                
               """,(executing_agency ,date_from,date_to))
        res = self.cr.dictfetchall()
 
        return res
   

               
report_sxw.report_sxw('report.asset.custody.detail', 'asset.custody', 'addons/account_asset_custody/report/detail_custody.rml' ,parser=asset_custody_detail_reports ,header='custom landscape')
# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
