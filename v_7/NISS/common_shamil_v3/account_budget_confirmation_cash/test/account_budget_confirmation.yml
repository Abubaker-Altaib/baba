    
- 
  Creating a account.budget.confirmation record one
- 
  !record {model: account.budget.confirmation, id: account_budget_confirmation_0}:
    amount: 400.0
    analytic_account_id: account.analytic_administratif
    budget_residual: 0.0
    date: '2013-01-08'
    general_account_id: account.xfa
    name: 2013/001
    note: 'Purchase Approval: 2013/PR-0002 \nDepartment: Research & Development \nPurposes:
      direct.\nDate: 2013-01-08  \nProducts: Kit Keyboard + Mouse\n '
    partner_id: base.res_partner_desertic_hispafuentes
    period_id: account.period_1
    ref: 2013/PR-0002
    state: draft
    type: purchase
    
- 
  Creating a account.budget.confirmation record two
- 
  !record {model: account.budget.confirmation, id: account_budget_confirmation_2}:
    amount: 40000000000.0
    analytic_account_id: account.analytic_administratif
    budget_residual: 0.0
    date: '2013-01-08'
    general_account_id: account.xfa
    name: 2013/001
    note: 'Purchase Approval: 2013/PR-0002 \nDepartment: Research & Development \nPurposes:
      direct.\nDate: 2013-01-08  \nProducts: Kit Keyboard + Mouse\n '
    partner_id: base.res_partner_desertic_hispafuentes
    period_id: account.period_1
    ref: 2013/PR-0002
    state: draft
    type: purchase    
-
  I check valid budget confirmation 
-
  I check that the budget state is now "draft"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_0}:
    - state == 'draft'
   
-
  I complete the budget confirmation 
-
  !workflow {model: account.budget.confirmation, action: complete, ref: account_budget_confirmation_0}

-
  I check that the budget state is now "complete"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_0}:
    - state == 'complete'
-
  I check the budget confirmation 
-
  !workflow {model: account.budget.confirmation, action: check, ref: account_budget_confirmation_0}
-
  I check that the budget state is now "valid"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_0}:
    - state == 'valid','the satae is unvalid'
-
  I check not valid budget confirmation 
-
  I check that the budget state is now "draft"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_2}:
    - state == 'draft'
   
-
  I complete the budget confirmation 
-
  !workflow {model: account.budget.confirmation, action: complete, ref: account_budget_confirmation_2}

-
  I check that the budget state is now "complete"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_2}:
    - state == 'complete'        
-
  I check the budget confirmation 
-
  !workflow {model: account.budget.confirmation, action: check, ref: account_budget_confirmation_2}
-
  I check that the budget state is now "unvalid"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_2}:
    - state == 'unvalid', "the state is not valid"
-
  Now I modify the value of the amount .
-
  !python {model: account.budget.confirmation}: |
    self.write(cr, uid, [ref("account_budget_confirmation_2")],{'amount': 400.0})
-
  I check the budget confirmation 
-
  !workflow {model: account.budget.confirmation, action: check, ref: account_budget_confirmation_2}
-
  I check that the budget state is now "valid"
-
  !assert {model: account.budget.confirmation, id: account_budget_confirmation_2}:
    - state == 'valid','the satae is unvalid'